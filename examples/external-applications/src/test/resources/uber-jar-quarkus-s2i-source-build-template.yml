apiVersion: v1
kind: List
items:
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      name: ${APP_NAME}
    spec:
      lookupPolicy:
        local: false

  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      name: ${APP_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
      source:
        git:
          uri: ${GIT_URI}
          ref: ${GIT_REF}
        type: Git
        contextDir: ${CONTEXT_DIR}
        configMaps:
          - configMap:
              name: settings-mvn
            destinationDir: "/configuration"
      strategy:
        type: Source
        sourceStrategy:
          env:
            - name: ARTIFACT_COPY_ARGS
              value: -p -r *-runner.jar
            - name: MAVEN_ARGS
              value: -s /configuration/settings.xml ${GIT_MAVEN_ARGS} -Dquarkus.platform.version=${QUARKUS_VERSION} -Dquarkus-plugin.version=${QUARKUS_VERSION} -Dquarkus.package.type=uber-jar
          from:
            kind: ImageStreamTag
            name: openjdk-11:latest
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChange: {}

  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: ${APP_NAME}
    spec:
      replicas: 1
      selector:
        name: ${APP_NAME}
      template:
        metadata:
          labels:
            name: ${APP_NAME}
        spec:
          containers:
            - name: ${APP_NAME}
              image: ${APP_NAME}:latest
              ports:
                - containerPort: 8080
                  protocol: TCP
      test: false
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${APP_NAME}
            from:
              kind: ImageStreamTag
              name: ${APP_NAME}:latest

  - apiVersion: v1
    kind: Service
    metadata:
      name: ${APP_NAME}
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        name: ${APP_NAME}

  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: ${APP_NAME}
    spec:
      to:
        name: ${APP_NAME}
