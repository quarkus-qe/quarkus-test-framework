apiVersion: v1
kind: List
metadata: {}
items:
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${SERVICE_NAME}
      name: ${SERVICE_NAME}
    spec:
      ports:
        - name: "http"
          port: ${KAFKA_PORT}
          targetPort: ${KAFKA_PORT}
      selector:
        app: ${SERVICE_NAME}
      type: LoadBalancer
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      name: zookeeper-service
      labels:
        app: zookeeper
    spec:
      ports:
        - port: 2181
          name: client
      selector:
        app: zookeeper
  - apiVersion: "apps.openshift.io/v1"
    kind: "DeploymentConfig"
    metadata:
      name: ${SERVICE_NAME}
    spec:
      selector:
        app: ${SERVICE_NAME}
      serviceName: ${SERVICE_NAME}
      replicas: 1
      template:
        metadata:
          labels:
            app: ${SERVICE_NAME}
        spec:
          terminationGracePeriodSeconds: 10
          containers:
            - name: ${SERVICE_NAME}-container
              image: ${IMAGE}:${VERSION}
              imagePullPolicy: IfNotPresent
              command: [ "/bin/sh" ]
              args: [ "-c", "bin/kafka-server-start.sh config/server.properties --override listeners=PLAINTEXT://0.0.0.0:${KAFKA_PORT} --override advertised.listeners=PLAINTEXT://${SERVICE_NAME}:${KAFKA_PORT} --override zookeeper.connect=zookeeper-service:2181" ]
              env:
                - name: "LOG_DIR"
                  value: "/tmp"
              ports:
                - containerPort: ${KAFKA_PORT}
              resources: {}
      triggers:
      - type: "ConfigChange"
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: zookeeper
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: zookeeper
      template:
        metadata:
          labels:
            app: zookeeper
        spec:
          containers:
            - name: k8s-zookeeper
              image: quay.io/debezium/zookeeper
              ports:
                - containerPort: 2181
                  name: client
          restartPolicy: Always
        status: { }