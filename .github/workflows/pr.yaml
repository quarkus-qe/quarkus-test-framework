name: "PR"
on:
  - pull_request
jobs:
  validate-format:
    name: Validate format
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 17 ]
    steps:
      - uses: actions/checkout@v4
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install required tools
        run: sudo apt update && sudo apt install pigz
      - name: Install JDK {{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: 'maven'
      - name: Build with Maven
        run: |
          mvn -V -B -s .github/mvn-settings.xml clean install -Pframework,examples -Dvalidate-format -DskipTests -DskipITs
      - name: Tar Maven Repo
        shell: bash
        run: tar -I 'pigz -9' -cf maven-repo-current-fw.tgz -C ~ .m2/repository
      - name: Persist Maven Repo
        uses: actions/upload-artifact@v4
        with:
          name: maven-repo-current-fw${{matrix.java}}
          path: maven-repo-current-fw.tgz
          retention-days: 1
  quarkus-main-build:
    name: Quarkus 3.8 build
    runs-on: ubuntu-latest
    needs: validate-format
    strategy:
      matrix:
        java: [ 17 ]
    steps:
      - uses: actions/checkout@v4
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install required tools
        run: sudo apt update && sudo apt install pigz
      - name: Install JDK {{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: 'maven'
      - name: Build Quarkus 3.8
        run: |
          git clone https://github.com/quarkusio/quarkus.git && cd quarkus && git checkout 3.8 && ./mvnw -B -s .github/mvn-settings.xml clean install -Dquickly -Dno-test-modules -Prelocations
      - name: Tar Maven Repo
        shell: bash
        run: tar -I 'pigz -9' -cf maven-repo.tgz -C ~ .m2/repository
      - name: Persist Maven Repo
        uses: actions/upload-artifact@v4
        with:
          name: maven-repo${{matrix.java}}
          path: maven-repo.tgz
          retention-days: 1
  linux-build-jvm-released:
    name: Linux - JVM build - Released Versions
    runs-on: ubuntu-latest
    needs: validate-format
    strategy:
      matrix:
        quarkus-version: ["current"]
        java: [ 17 ]
    steps:
      - uses: actions/checkout@v4
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install JDK {{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: 'maven'
      - name: Install Helm client
        uses: azure/setup-helm@v3
        with:
          version: v3.9.0
        id: install
      - name: Setup helmfile
        uses: mamezou-tech/setup-helmfile@v2.0.0
        with:
          helmfile-version: "v0.145.2"
          install-helm: no
      - name: Download Maven Repo
        uses: actions/download-artifact@v4
        with:
          name: maven-repo-current-fw${{matrix.java}}
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo-current-fw.tgz -C ~
      - name: Build in JVM mode
        run: |
          mvn -B -fae -s .github/mvn-settings.xml clean install -Pexamples
      - name: Zip Artifacts
        run: |
          zip -R artifacts-quarkus${{ matrix.quarkus-version }}-linux-jvm${{ matrix.java }}.zip '*-reports/*'
      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-quarkus${{ matrix.quarkus-version }}-linux-jvm${{ matrix.java }}
          path: artifacts-quarkus${{ matrix.quarkus-version }}-linux-jvm${{ matrix.java }}.zip
  linux-build-jvm-latest:
    name: Linux - JVM build - Latest Version
    runs-on: ubuntu-latest
    needs: quarkus-main-build
    strategy:
      matrix:
        quarkus-version: ["3.8.999-SNAPSHOT"]
        java: [ 17 ]
    steps:
      - uses: actions/checkout@v4
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install JDK {{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: 'maven'
      - name: Install Helm client
        uses: azure/setup-helm@v3
        with:
          version: v3.9.0
        id: install
      - name: Setup helmfile
        uses: mamezou-tech/setup-helmfile@v2.0.0
        with:
          helmfile-version: "v0.145.2"
          install-helm: no
      - name: Download Maven Repo
        uses: actions/download-artifact@v4
        with:
          name: maven-repo${{matrix.java}}
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Build Quarkus CLI
        run: |
          git clone https://github.com/quarkusio/quarkus.git && cd quarkus/devtools/cli && git checkout 3.8 && mvn -B -s ../../../.github/mvn-settings.xml clean install -Dquickly -Dno-test-modules -Prelocations
      - name: Install Quarkus CLI
        run: |
          cat <<EOF > ./quarkus-dev-cli
          #!/bin/bash
          java -jar $PWD/quarkus/devtools/cli/target/quarkus-cli-3.8.999-SNAPSHOT-runner.jar "\$@"
          EOF
          chmod +x ./quarkus-dev-cli
          ./quarkus-dev-cli version
      - name: Build in JVM mode
        run: |
          mvn -B -fae -s .github/mvn-settings.xml clean install -Pframework,examples,extensions -Drun-cli-tests -Dts.quarkus.cli.cmd="${PWD}/quarkus-dev-cli" -Dquarkus.platform.version="${{ matrix.quarkus-version }}"
      - name: Zip Artifacts
        run: |
          zip -R artifacts-latest-linux-jvm${{ matrix.java }}.zip '*-reports/*'
      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-latest-linux-jvm${{ matrix.java }}
          path: artifacts-latest-linux-jvm${{ matrix.java }}.zip
  linux-build-native-released:
    name: Daily - Linux - Native build - Released Version
    runs-on: ubuntu-latest
    needs: validate-format
    strategy:
      matrix:
        quarkus-version: [ "current" ]
        java: [ 17 ]
        examples: [
          'examples/pingpong,examples/restclient,examples/greetings,examples/blocking-reactive-model,examples/https,examples/grpc,examples/consul,examples/infinispan,examples/microprofile,examples/keycloak,examples/kafka,examples/kafka-registry,examples/kafka-streams',
          '!examples/pingpong,!examples/restclient,!examples/greetings,!examples/blocking-reactive-model,!examples/https,!examples/grpc,!examples/consul,!examples/infinispan,!examples/microprofile,!examples/keycloak,!examples/kafka,!examples/kafka-registry,!examples/kafka-streams'
        ]
    steps:
      - uses: actions/checkout@v4
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install JDK {{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: 'maven'
      - name: Install Helm client
        uses: azure/setup-helm@v3
        with:
          version: v3.9.0
        id: install-helm
      - name: Setup helmfile
        uses: mamezou-tech/setup-helmfile@v2.0.0
        with:
          helmfile-version: "v0.145.2"
          install-helm: no
      - name: Download Maven Repo
        uses: actions/download-artifact@v4
        with:
          name: maven-repo-current-fw${{matrix.java}}
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo-current-fw.tgz -C ~
      - name: Build
        run: |
          mvn -B -fae -s .github/mvn-settings.xml clean install -Pexamples,native -pl '${{ matrix.examples }}'
      - name: Zip Artifacts
        if: failure()
        run: |
          zip -R artifacts-native-${{ matrix.quarkus-version }}-${{ matrix.java }}.zip '*-reports/*'
      - name: Archive artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-native-${{ matrix.quarkus-version }}-${{ matrix.java }}
          path: artifacts-native-${{ matrix.quarkus-version }}-${{ matrix.java }}.zip
  windows-build-jvm-latest:
    name: Windows - JVM build - Latest Version
    runs-on: windows-latest
    needs: quarkus-main-build
    strategy:
      matrix:
        java: [ 17 ]
        quarkus-version: ["3.8.999-SNAPSHOT"]
    steps:
      - uses: actions/checkout@v4
      - name: Install JDK {{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: 'maven'
      - name: Install Helm client
        uses: azure/setup-helm@v3
        with:
          version: v3.9.0
        id: install
      - uses: MinoruSekine/setup-scoop@main
        with:
          add_extras_bucket: 'true'
      - name: Install helmfile
        shell: bash
        run: scoop install helmfile
      - name: Download Maven Repo
        uses: actions/download-artifact@v4
        with:
          name: maven-repo${{matrix.java}}
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Build in JVM mode
        shell: bash
        run: |
          mvn -B -fae -s .github/mvn-settings.xml clean install -Pframework,examples -Dquarkus.platform.version="${{ matrix.quarkus-version }}"
      - name: Zip Artifacts
        shell: bash
        if: failure()
        run: |
          # Disambiguate windows find from cygwin find
          /usr/bin/find . -name '*-reports/*' -type d | tar -czf artifacts-latest-windows-jvm${{ matrix.java }}.tar -T -
      - name: Archive artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-latest-windows-jvm${{ matrix.java }}
          path: artifacts-latest-windows-jvm${{ matrix.java }}.tar
