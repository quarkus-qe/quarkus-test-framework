name: "Pull Request Build"
on:
  - pull_request
jobs:
  build:
    name: PR build using Released Quarkus
    runs-on: ubuntu-latest
    strategy:
      matrix:
        quarkus-version: ["1.13.7.Final", "2.0.0.CR3"]
        java: [ 11 ]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install JDK {{ matrix.java }}
        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
        with:
          java-version: ${{ matrix.java }}
      - name: Build in JVM mode
        run: |
          mvn -s .github/mvn-settings.xml clean install -Pframework,examples -Dvalidate-format -Dquarkus.platform.version="${{ matrix.quarkus-version }}"
      - name: Zip Artifacts
        run: |
          zip -R artifacts-jvm${{ matrix.java }}.zip '*-reports/*'
      - name: Archive artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ci-artifacts
          path: artifacts-jvm${{ matrix.java }}.zip
  build-latest:
    name: PR build using Latest Quarkus
    runs-on: ubuntu-latest
    strategy:
      matrix:
        quarkus-version: ["999-SNAPSHOT"]
        java: [ 11 ]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install JDK {{ matrix.java }}
        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
        with:
          java-version: ${{ matrix.java }}
      - name: Build Quarkus main
        run: |
          git clone https://github.com/quarkusio/quarkus.git && cd quarkus && ./mvnw -B -s .github/mvn-settings.xml clean install -Dquickly
      - name: Install Quarkus CLI
        run: |
          cat <<EOF > ./quarkus-dev-cli
          #!/bin/bash
          java -jar $PWD/quarkus/devtools/cli/target/quarkus-cli-999-SNAPSHOT-runner.jar "\$@"
          EOF
          chmod +x ./quarkus-dev-cli
      - name: Build in JVM mode
        run: |
          mvn -s .github/mvn-settings.xml clean install -Pframework -Drun-cli-tests -Dts.quarkus.cli.cmd="${PWD}/quarkus-dev-cli" -Dquarkus.platform.version="${{ matrix.quarkus-version }}"
      - name: Zip Artifacts
        run: |
          zip -R artifacts-latest-jvm${{ matrix.java }}.zip '*-reports/*'
      - name: Archive artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ci-artifacts
          path: artifacts-latest-jvm${{ matrix.java }}.zip
