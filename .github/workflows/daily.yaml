name: "Daily Build"
on:
  workflow_dispatch:
  schedule:
    - cron: '0 23 * * *'
jobs:
  quarkus-main-build:
    name: Quarkus Main build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 11 ]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install JDK {{ matrix.java }}
        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
        with:
          java-version: ${{ matrix.java }}
      - name: Build Quarkus main
        run: |
          git clone https://github.com/quarkusio/quarkus.git && cd quarkus && mvn -B -s .github/mvn-settings.xml clean install -Dquickly
      - name: Tar Maven Repo
        shell: bash
        run: tar -I 'pigz -9' -cf maven-repo.tgz -C ~ .m2/repository
      - name: Persist Maven Repo
        uses: actions/upload-artifact@v1
        with:
          name: maven-repo
          path: maven-repo.tgz
  build-jvm-latest:
    name: Daily build - JVM - latest Quarkus
    runs-on: ubuntu-latest
    needs: quarkus-main-build
    strategy:
      matrix:
        quarkus-version: ["999-SNAPSHOT"]
        java: [ 11 ]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install JDK {{ matrix.java }}
        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
        with:
          java-version: ${{ matrix.java }}
      - name: Download Maven Repo
        uses: actions/download-artifact@v1
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Build Quarkus CLI
        run: |
          git clone https://github.com/quarkusio/quarkus.git && cd quarkus/devtools/cli && mvn -B -s ../../../.github/mvn-settings.xml clean install -Dquickly
      - name: Install Quarkus CLI
        run: |
          cat <<EOF > ./quarkus-dev-cli
          #!/bin/bash
          java -jar $PWD/quarkus/devtools/cli/target/quarkus-cli-999-SNAPSHOT-runner.jar "\$@"
          EOF
          chmod +x ./quarkus-dev-cli
      - name: Build
        run: |
          mvn -s .github/mvn-settings.xml clean install -Pframework,examples,coverage -Dvalidate-format -Drun-cli-tests -Dts.quarkus.cli.cmd="${PWD}/quarkus-dev-cli" -Dquarkus.platform.version="${{ matrix.quarkus-version }}"
      - name: Generate Jacoco Report
        run: |
          cd coverage-report
          mvn package
      - name: Generate Jacoco Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          jacoco-csv-file: coverage-report/target/site/jacoco/jacoco.csv
      - name: Coverage Preparation
        id: coverage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          if [[ `git status | grep .svg | wc -l` > 0 ]]; then
            echo ::set-output name=needs-commit-badge::true
          else
            echo ::set-output name=needs-commit-badge::false
          fi
      - name: Commit the badge (if it changed)
        if: steps.coverage.outputs.needs-commit-badge == 'true'
        run: |
          git config --global user.name 'QuarkusQE'
          git config --global user.email 'QuarkusQE@users.noreply.github.com'
          git add *.svg
          git commit -m "Autogenerated JaCoCo coverage badge"
      - name: Push the badge (if it changed)
        if: steps.coverage.outputs.needs-commit-badge == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
      - name: Zip Artifacts
        if: failure()
        run: |
          zip -R artifacts-jvm-latest-${{ matrix.java }}.zip '*-reports/*'
      - name: Archive artifacts
        if: failure()
        uses: actions/upload-artifact@v1
        with:
          name: ci-artifacts
          path: artifacts-jvm-latest-${{ matrix.java }}.zip
      - name: Archive Coverage Report
        uses: actions/upload-artifact@v1
        with:
          name: ci-coverage
          path: coverage-report/target/site/jacoco
  build-jvm-released:
    name: Daily build - JVM - released Quarkus
    runs-on: ubuntu-latest
    needs: quarkus-main-build
    strategy:
      matrix:
        quarkus-version: ["1.13.6.Final", "2.0.0.CR3"]
        java: [ 11 ]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install JDK {{ matrix.java }}
        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
        with:
          java-version: ${{ matrix.java }}
      - name: Download Maven Repo
        uses: actions/download-artifact@v1
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Build
        run: |
          mvn -s .github/mvn-settings.xml clean install -Pframework,examples -Dvalidate-format -Dquarkus.platform.version="${{ matrix.quarkus-version }}"
      - name: Zip Artifacts
        if: failure()
        run: |
          zip -R artifacts-jvm-${{ matrix.quarkus-version }}-${{ matrix.java }}.zip '*-reports/*'
      - name: Archive artifacts
        if: failure()
        uses: actions/upload-artifact@v1
        with:
          name: ci-artifacts
          path: artifacts-jvm-${{ matrix.quarkus-version }}-${{ matrix.java }}.zip
  build-native:
    name: Daily build - Native
    runs-on: ubuntu-latest
    needs: quarkus-main-build
    strategy:
      matrix:
        quarkus-version: ["1.13.6.Final", "2.0.0.CR3", "999-SNAPSHOT"]
        java: [ 11 ]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install JDK {{ matrix.java }}
        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
        with:
          java-version: ${{ matrix.java }}
      - name: Download Maven Repo
        uses: actions/download-artifact@v1
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Build
        run: |
          mvn -s .github/mvn-settings.xml clean install -Pframework,examples,native -Dquarkus.platform.version="${{ matrix.quarkus-version }}"
      - name: Zip Artifacts
        if: failure()
        run: |
          zip -R artifacts-native-${{ matrix.quarkus-version }}-${{ matrix.java }}.zip '*-reports/*'
      - name: Archive artifacts
        if: failure()
        uses: actions/upload-artifact@v1
        with:
          name: ci-artifacts
          path: artifacts-native-${{ matrix.quarkus-version }}-${{ matrix.java }}.zip
  build-jvm-kubernetes:
    name: Daily build - JVM - Kubernetes
    runs-on: ubuntu-latest
    needs: quarkus-main-build
    strategy:
      matrix:
        quarkus-version: ["1.13.6.Final", "2.0.0.CR3", "999-SNAPSHOT"]
        java: [ 11 ]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install JDK {{ matrix.java }}
        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
        with:
          java-version: ${{ matrix.java }}
      - uses: engineerd/setup-kind@v0.5.0
      - name: Configure Load Balancer
        run: .github/configure-load-balancer.sh bridge
      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.CI_REGISTRY }}
          username: ${{ secrets.CI_REGISTRY_USERNAME }}
          password: ${{ secrets.CI_REGISTRY_PASSWORD }}
      - name: Download Maven Repo
        uses: actions/download-artifact@v1
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Build
        run: |
          mvn -B -s .github/mvn-settings.xml clean install -Pframework,examples,kubernetes -Dts.container.registry-url=${{ secrets.CI_REGISTRY }} -Dquarkus.platform.version="${{ matrix.quarkus-version }}"
      - name: Zip Artifacts
        if: failure()
        run: |
          zip -R artifacts-k8s-jvm-${{ matrix.quarkus-version }}-${{ matrix.java }}.zip '*-reports/*'
      - name: Archive artifacts
        if: failure()
        uses: actions/upload-artifact@v1
        with:
          name: ci-artifacts
          path: artifacts-k8s-jvm-${{ matrix.quarkus-version }}-${{ matrix.java }}.zip
  build-native-kubernetes:
    name: Daily build - Native - Kubernetes
    runs-on: ubuntu-latest
    needs: quarkus-main-build
    strategy:
      matrix:
        quarkus-version: ["1.13.6.Final", "2.0.0.CR3", "999-SNAPSHOT"]
        java: [ 11 ]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install JDK {{ matrix.java }}
        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
        with:
          java-version: ${{ matrix.java }}
      - uses: engineerd/setup-kind@v0.5.0
      - name: Configure Load Balancer
        run: .github/configure-load-balancer.sh bridge
      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.CI_REGISTRY }}
          username: ${{ secrets.CI_REGISTRY_USERNAME }}
          password: ${{ secrets.CI_REGISTRY_PASSWORD }}
      - name: Download Maven Repo
        uses: actions/download-artifact@v1
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Build
        run: |
          mvn -s .github/mvn-settings.xml clean install -Pframework,examples,kubernetes,native -Dts.container.registry-url=${{ secrets.CI_REGISTRY }} -Dquarkus.platform.version="${{ matrix.quarkus-version }}"
      - name: Zip Artifacts
        if: failure()
        run: |
          zip -R artifacts-k8s-native-${{ matrix.quarkus-version }}-${{ matrix.java }}.zip '*-reports/*'
      - name: Archive artifacts
        if: failure()
        uses: actions/upload-artifact@v1
        with:
          name: ci-artifacts
          path: artifacts-k8s-native-${{ matrix.quarkus-version }}-${{ matrix.java }}.zip